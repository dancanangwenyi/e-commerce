plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //
    swaggerCodegen 'org.openapitools:openapi-generator-cli:4.3.1'
    compileOnly 'io.swagger:swagger-annotations:1.6.2'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    //
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

swaggerSources {

    def typeMappings = 'URI=URI'
    def importMappings = 'URI=java.net.URI'

    eStore {

        def apiYaml = "${rootDir}/src/main/resources/api                    /openapi.yaml"
        def configJson = "${rootDir}/src/main/resources/api                       /config.json"
        inputFile = file(apiYaml)
        def ignoreFile = file("${rootDir}/src/main/resources/api                            /.openapi-generator-ignore")

        code {

            language = 'spring'
            configFile = file(configJson)
            rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings', typeMappings, '--import-mappings', importMappings] as  List<String>
            components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']

            //depends On validation // Should be uncommented once
            //plugin starts supporting OA 3 validation

        }

    }

}

tasks.named('test') {
    useJUnitPlatform()
}
